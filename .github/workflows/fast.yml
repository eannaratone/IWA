
# Create GitHub Action Repository Variables for your version of the application:
#   FORTIFY_BASE_URL should be the Fortify Base URL (e.g. https://ssc.uat.fortifyhosted.net)
#   FORTIFY_PARENT_APPVER_NAME is the Fortify SSC Application Version Name corresponding to the parent branch of any newly created branch, this is typically "main" or "develop"
#   FORTIFY_SCANCENTRAL_VERSION is the version of ScanCentral SAST Sensors being used
# Create GitHub Action Secrets for your version of the application:
#   FORTIFY_SSC_TOKEN should be an SSC Authorization token (CIToken) obtained from your Fortify tenant.
#   FORTIFY_SCSAST_CLIENT_AUTH_TOKEN should be the ScanCentral SAST Client Authentication token for your Fortify tenant.

name: FAST with Fortify ScanCentral DAST

on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      runFAST:
        description: 'Run Fortify ScanCentral FAST'
        required: false
        default: 'true'            

# Global environment variables
env:
  DEFAULT_APP_NAME: "IWA"
  DEFAULT_FAST_PORT: 8087

jobs:

  FAST-Scan:
    runs-on: ubuntu-latest
    if: ${{ (github.event.inputs.runFAST == 'true') }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          # Fetch at least the immediate parents so that if this is a pull request then we can checkout the head.
          fetch-depth: 2
      - name: Start FAST Container
        shell: bash
        run: |
          echo "Starting FAST Container"
          CONTAINER_NAME="fortify-fast"
          IMAGE_NAME="fortifydocker/fortify-fast:24.2.ubuntu.2204"
          mkdir -p "$HOME/.fast/certs"
          echo docker run --name $CONTAINER_NAME \
              -p ${FAST_PORT}:8087 \
              -v "$HOME/.fast/certs:/etc/fast/certs" \
              --rm \
              $IMAGE_NAME \
              -p ${FAST_PORT} \
              -u ${SCANCENTRAL_DAST_API} \
              -CIToken ${SSC_CI_TOKEN}> \
              -CICDToken ${SCANCENTRAL_DAST_CICD_TOKEN}
          docker run --name $CONTAINER_NAME \
              -p ${FAST_PORT}:8087 \
              -v "$HOME/.fast/certs:/etc/fast/certs" \
              --rm \
              $IMAGE_NAME \
              -p ${FAST_PORT} \
              -u ${SCANCENTRAL_DAST_API} \
              -CIToken ${SSC_CI_TOKEN}> \
              -CICDToken ${SCANCENTRAL_DAST_CICD_TOKEN}
          docker ps -a
        env:
          FAST_PORT: ${{ env.DEFAULT_FAST_PORT }}
          SCANCENTRAL_DAST_API: ${{ vars.FORTIFY_SCDAST_API_URL }}
          SSC_CI_TOKEN: ${{ secrets.FORTIFY_SSC_TOKEN }}
          SCANCENTRAL_DAST_CICD_TOKEN: ${{ vars.FORTIFY_SCDAST_CICD_TOKEN }}
      - name: Set up Python 3.12
        uses: actions/setup-python@v1
        with:
          python-version: 3.12.4
      - name: Install pipenv
        run: pip install pipenv
      - name: Run Selenium Tests
        run: |
          pipenv install --dev
          pipenv run pytest -v -s    
        env:
          FAST_PORT: ${{ env.DEFAULT_FAST_PORT }}
          SCANCENTRAL_DAST_API: ${{ vars.FORTIFY_SCDAST_API_URL }}
          SSC_CI_TOKEN: ${{ secrets.FORTIFY_SSC_TOKEN }}
          SCANCENTRAL_DAST_CICD_TOKEN: ${{ vars.FORTIFY_SCDAST_CICD_TOKEN }}        
      - name: Stop FAST Container
        shell: bash
        run: |
          echo "Stopping FAST Container"
          docker exec $CONTAINER_NAME fast -p ${FAST_PORT} -s
        env:
          FAST_PORT: ${{ env.DEFAULT_FAST_PORT }}
          SCANCENTRAL_DAST_API: ${{ vars.FORTIFY_SCDAST_API_URL }}
          SSC_CI_TOKEN: ${{ secrets.FORTIFY_SSC_TOKEN }}
          SCANCENTRAL_DAST_CICD_TOKEN: ${{ vars.FORTIFY_SCDAST_CICD_TOKEN }}          
      # TBD 
